name: Unit testing, formatting & linting

on:
  - push

jobs:
  testing-formatting-linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache multiple Pips
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-{{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - run: pip install poetry
      - run: poetry install
      - run: poetry run make test
      - run: poetry run make check

  bump-version:
    if: github.ref_name == 'master' && !startsWith(github.event.head_commit.message, 'bump:')
    needs:
      - testing-formatting-linting
    runs-on: ubuntu-latest
    name: "Bump version and create changelog with commitizen"
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION_FOR_BUMPING }}"
      - name: Cache virtual environment and pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-${{ env.PYTHON_VERSION_FOR_BUMPING }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --with dev --no-interaction --no-ansi --sync

      - name: Create new version and changelog
        run: |
          poetry run cz --no-raise 21 bump --yes --changelog --check-consistency

          git config user.email "github-actions@githhub.com"
          git config user.name "Github Actions"

          git config --local pull.rebase true
          git pull origin $(git branch --show-current)
          git push -u origin HEAD:$(git branch --show-current)
          git push --tags

  publish_package:
    runs-on: ubuntu-latest
    needs:
      - bump-version
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION_FOR_BUMPING }}"
      - name: Cache Pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-${{ env.PYTHON_VERSION_FOR_BUMPING }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - run: pip install poetry
      - run: poetry build
      # From https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#publishing-the-distribution-to-pypi-and-testpypi
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
